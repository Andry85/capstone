{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCEUTvgfd6EPQKcpu8AbaQVUK__Nq6qZzg\",\n  authDomain: \"crwn-clothing-db-9e875.firebaseapp.com\",\n  projectId: \"crwn-clothing-db-9e875\",\n  storageBucket: \"crwn-clothing-db-9e875.appspot.com\",\n  messagingSenderId: \"583518348880\",\n  appId: \"1:583518348880:web:cfc9cc85592c9a09095355\"\n}; // Initialize Firebase\n\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentfromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log();\n    }\n  }\n};","map":{"version":3,"sources":["/var/www/capstone/crwn-clothing/src/utils/firebase/firebase.utils.js"],"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentfromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error"],"mappings":"AAAA,SAAQA,aAAR,QAA4B,cAA5B;AACA,SAAQC,OAAR,EAAiBC,kBAAjB,EAAqCC,eAArC,EAAsDC,kBAAtD,QAA+E,eAA/E;AACA,SAAQC,YAAR,EAAsBC,GAAtB,EAA2BC,MAA3B,EAAmCC,MAAnC,QAAgD,oBAAhD,C,CAGA;;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,wCAFO;AAGnBC,EAAAA,SAAS,EAAE,wBAHQ;AAInBC,EAAAA,aAAa,EAAE,oCAJI;AAKnBC,EAAAA,iBAAiB,EAAE,cALA;AAMnBC,EAAAA,KAAK,EAAE;AANY,CAAvB,C,CASE;;AACA,MAAMC,WAAW,GAAGhB,aAAa,CAACS,cAAD,CAAjC;AAEA,MAAMQ,QAAQ,GAAG,IAAIb,kBAAJ,EAAjB;AACAa,QAAQ,CAACC,mBAAT,CAA6B;AACzBC,EAAAA,MAAM,EAAE;AADiB,CAA7B;AAKA,OAAO,MAAMC,IAAI,GAAGnB,OAAO,EAApB;AACP,OAAO,MAAMoB,qBAAqB,GAAG,MAAMlB,eAAe,CAACiB,IAAD,EAAOH,QAAP,CAAnD;AAGP,OAAO,MAAMK,EAAE,GAAGjB,YAAY,EAAvB;AAEP,OAAO,MAAMkB,0BAA0B,GAAG,MAAMC,QAAN,IAAmB;AACzD,QAAMC,UAAU,GAAGnB,GAAG,CAACgB,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ;AAEA,QAAMI,YAAY,GAAG,MAAMtB,MAAM,CAACkB,UAAD,CAAjC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;AAEA,MAAI,CAACD,YAAY,CAACC,MAAb,EAAL,EAA4B;AACxB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBR,QAA7B;AACA,UAAMS,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAM1B,MAAM,CAACiB,UAAD,EAAa;AACrBM,QAAAA,WADqB;AAErBC,QAAAA,KAFqB;AAGrBC,QAAAA;AAHqB,OAAb,CAAZ;AAKD,KAND,CAME,OAAOE,KAAP,EAAc;AACdR,MAAAA,OAAO,CAACC,GAAR;AACD;AAEJ;AAIJ,CA5BM","sourcesContent":["import {initializeApp} from 'firebase/app';\nimport {getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider} from 'firebase/auth';\nimport {getFirestore, doc, getDoc, setDoc} from 'firebase/firestore';\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCEUTvgfd6EPQKcpu8AbaQVUK__Nq6qZzg\",\n    authDomain: \"crwn-clothing-db-9e875.firebaseapp.com\",\n    projectId: \"crwn-clothing-db-9e875\",\n    storageBucket: \"crwn-clothing-db-9e875.appspot.com\",\n    messagingSenderId: \"583518348880\",\n    appId: \"1:583518348880:web:cfc9cc85592c9a09095355\"\n  };\n  \n  // Initialize Firebase\n  const firebaseApp = initializeApp(firebaseConfig);\n\n  const provider = new GoogleAuthProvider();\n  provider.setCustomParameters({\n      prompt: 'select_account'\n  });\n\n\n  export const auth = getAuth();\n  export const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n\n  export const db = getFirestore();\n\n  export const createUserDocumentfromAuth = async(userAuth) => {\n      const userDocRef = doc(db, 'users', userAuth.uid);\n\n      console.log(userDocRef);\n\n      const userSnapshot = await getDoc(userDocRef);\n\n      console.log(userSnapshot);\n      console.log(userSnapshot.exists());\n\n      if (!userSnapshot.exists()) {\n          const {displayName, email} = userAuth;\n          const createdAt = new Date();\n\n          try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt\n            });\n          } catch (error) {\n            console.log();\n          }\n\n      }\n\n\n\n  }"]},"metadata":{},"sourceType":"module"}