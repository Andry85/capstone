{"ast":null,"code":"var _jsxFileName = \"/var/www/capstone/crwn-clothing/src/components/sign-up-form/sign-up-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentfromAuth } from '../../utils/firebase/firebase.utils';\nimport './sign-up-form.styles.scss';\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\nimport { UserContext } from \"../../contexts/users.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  displayName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst SignUpForm = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = formFields;\n\n  const resetFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"password do not match\");\n      return;\n    }\n\n    try {\n      const {\n        user\n      } = await createAuthUserWithEmailAndPassword(email, password);\n      await createUserDocumentfromAuth(user, {\n        displayName\n      });\n      resetFields();\n    } catch (error) {\n      if (error.code === 'auth/email-already-in-use') {\n        alert('Cannot create a user, email already in use');\n      } else {\n        console.error(error);\n      }\n    }\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Don't have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Dispaly Name\",\n        type: \"text\",\n        required: true,\n        onChange: handleChange,\n        name: \"displayName\",\n        value: displayName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Confirm password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"confirmPassword\",\n        value: confirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: \"google\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"sources":["/var/www/capstone/crwn-clothing/src/components/sign-up-form/sign-up-form.component.jsx"],"names":["useState","useContext","createAuthUserWithEmailAndPassword","createUserDocumentfromAuth","FormInput","Button","UserContext","defaultFormFields","displayName","email","password","confirmPassword","SignUpForm","formFields","setFormFields","resetFields","handleSubmit","event","preventDefault","alert","user","error","code","console","handleChange","name","value","target"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\n\nimport {createAuthUserWithEmailAndPassword, createUserDocumentfromAuth} from '../../utils/firebase/firebase.utils';\nimport './sign-up-form.styles.scss';\n\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\n\nimport { UserContext } from \"../../contexts/users.context\";\n\n\nconst defaultFormFields = {\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n}\n\nconst SignUpForm = () => {\n\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const {displayName, email, password, confirmPassword} = formFields;\n\n\n    \n    const resetFields = () => {\n        setFormFields(defaultFormFields);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert(\"password do not match\");\n            return;\n        }\n\n        try {\n            const {user} = await createAuthUserWithEmailAndPassword(email, password);\n\n            await createUserDocumentfromAuth(user, {displayName})\n            resetFields();\n            \n\n        } catch(error) {\n\n            if (error.code === 'auth/email-already-in-use') {\n                alert('Cannot create a user, email already in use');\n            } else {\n                console.error(error);\n            }\n\n            \n        }\n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n\n        setFormFields({...formFields, [name]: value});\n\n    };\n\n    return (\n        <div className=\"sign-up-container\">\n            <h2>Don't have an account?</h2>\n            <span>Sign up with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput label=\"Dispaly Name\" type=\"text\" required onChange={handleChange} name=\"displayName\" value={displayName} />\n                <FormInput label=\"Email\" type=\"email\" required onChange={handleChange} name=\"email\" value={email} />\n                <FormInput label=\"Password\" type=\"password\" required onChange={handleChange} name=\"password\" value={password} />\n                <FormInput label=\"Confirm password\" type=\"password\" required onChange={handleChange} name=\"confirmPassword\" value={confirmPassword} />\n                <Button buttonType='google' type=\"submit\">Sign Up</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignUpForm;"]},"metadata":{},"sourceType":"module"}