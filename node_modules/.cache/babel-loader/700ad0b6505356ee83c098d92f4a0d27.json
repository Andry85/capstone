{"ast":null,"code":"var _jsxFileName = \"/var/www/capstone/crwn-clothing/src/components/sign-in-form/sign-in-form.component.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { createAuthUserWithEmailAndPassword, createUserDocumentfromAuth } from '../../utils/firebase/firebase.utils';\nimport './sign-in-form.styles.scss';\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormFields = {\n  email: '',\n  password: ''\n};\n\nconst SignInForm = () => {\n  _s();\n\n  const [formFields, setFormFields] = useState(defaultFormFields);\n  const {\n    email,\n    password\n  } = formFields;\n\n  const resetFields = () => {\n    setFormFields(defaultFormFields);\n  };\n\n  const signInWithGoogle = async () => {\n    const {\n      user\n    } = await signInWithGooglePopup();\n    const userDocRef = await createUserDocumentfromAuth(user);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    try {\n      resetFields();\n    } catch (error) {}\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormFields({ ...formFields,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Already have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Email\",\n        type: \"email\",\n        required: true,\n        onChange: handleChange,\n        name: \"email\",\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: \"Password\",\n        type: \"password\",\n        required: true,\n        onChange: handleChange,\n        name: \"password\",\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignInForm, \"BSTP5B8VO6H/Fwu712VTuD9hH54=\");\n\n_c = SignInForm;\nexport default SignInForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInForm\");","map":{"version":3,"sources":["/var/www/capstone/crwn-clothing/src/components/sign-in-form/sign-in-form.component.jsx"],"names":["useState","createAuthUserWithEmailAndPassword","createUserDocumentfromAuth","FormInput","Button","defaultFormFields","email","password","SignInForm","formFields","setFormFields","resetFields","signInWithGoogle","user","signInWithGooglePopup","userDocRef","handleSubmit","event","preventDefault","error","handleChange","name","value","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,SAAQC,kCAAR,EACIC,0BADJ,QAEO,qCAFP;AAGA,OAAO,4BAAP;AAEA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAGA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBC,EAAAA,QAAQ,EAAE;AAFY,CAA1B;;AAKA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAACK,iBAAD,CAA5C;AACA,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBE,UAA1B;;AAEA,QAAME,WAAW,GAAG,MAAM;AACtBD,IAAAA,aAAa,CAACL,iBAAD,CAAb;AACH,GAFD;;AAIA,QAAMO,gBAAgB,GAAG,YAAW;AAChC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMC,qBAAqB,EAA1C;AACA,UAAMC,UAAU,GAAG,MAAMb,0BAA0B,CAACW,IAAD,CAAnD;AACH,GAHD;;AAKA,QAAMG,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;;AAGA,QAAI;AAGAP,MAAAA,WAAW;AAGd,KAND,CAME,OAAMQ,KAAN,EAAa,CAKd;AACJ,GAhBD;;AAkBA,QAAMC,YAAY,GAAIH,KAAD,IAAW;AAC5B,UAAM;AAACI,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBL,KAAK,CAACM,MAA5B;AAEAb,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AAAgB,OAACY,IAAD,GAAQC;AAAxB,KAAD,CAAb;AAEH,GALD;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAM,MAAA,QAAQ,EAAEN,YAAhB;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,OAAjB;AAAyB,QAAA,IAAI,EAAC,OAA9B;AAAsC,QAAA,QAAQ,MAA9C;AAA+C,QAAA,QAAQ,EAAEI,YAAzD;AAAuE,QAAA,IAAI,EAAC,OAA5E;AAAoF,QAAA,KAAK,EAAEd;AAA3F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAC,UAAjB;AAA4B,QAAA,IAAI,EAAC,UAAjC;AAA4C,QAAA,QAAQ,MAApD;AAAqD,QAAA,QAAQ,EAAEc,YAA/D;AAA6E,QAAA,IAAI,EAAC,UAAlF;AAA6F,QAAA,KAAK,EAAEb;AAApG;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAlDD;;GAAMC,U;;KAAAA,U;AAoDN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\n\nimport {createAuthUserWithEmailAndPassword, \n    createUserDocumentfromAuth\n} from '../../utils/firebase/firebase.utils';\nimport './sign-in-form.styles.scss';\n\nimport FormInput from \"../form-input/form-input.component\";\nimport Button from \"../button/button.component\";\n\n\nconst defaultFormFields = {\n    email: '',\n    password: '',\n}\n\nconst SignInForm = () => {\n\n    const [formFields, setFormFields] = useState(defaultFormFields);\n    const {email, password} = formFields;\n    \n    const resetFields = () => {\n        setFormFields(defaultFormFields);\n    }\n\n    const signInWithGoogle = async() => {\n        const {user} = await signInWithGooglePopup();\n        const userDocRef = await createUserDocumentfromAuth(user);\n    }\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n\n        try {\n            \n\n            resetFields();\n            \n\n        } catch(error) {\n\n            \n\n            \n        }\n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n\n        setFormFields({...formFields, [name]: value});\n\n    };\n\n    return (\n        <div className=\"sign-up-container\">\n            <h2>Already have an account?</h2>\n            <span>Sign up with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput label=\"Email\" type=\"email\" required onChange={handleChange} name=\"email\" value={email} />\n                <FormInput label=\"Password\" type=\"password\" required onChange={handleChange} name=\"password\" value={password} />\n                <Button type=\"submit\">Sign In</Button>\n            </form>\n        </div>\n    )\n}\n\nexport default SignInForm;"]},"metadata":{},"sourceType":"module"}